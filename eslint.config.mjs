import js from '@eslint/js';
import tseslint from 'typescript-eslint';
import prettier from 'eslint-config-prettier';
import globals from 'globals';

// @ts-expect-error Types might not be installed for tseslint.plugin
const tsPlugin = tseslint.plugin;

export default [
  // 0. CONFIG/SCRIPT FILES: Disable all @typescript-eslint/* rules for config files (robust, future-proof)
  {
    files: [
      '*.config.js',
      'packages/**/jest.config.js',
      'packages/**/jest.setup.js',
      'apps/**/jest.config.js',
      'apps/**/jest.setup.js',
      'apps/**/next.config.js',
      'playwright.config.ts',
    ],
    plugins: {
      '@typescript-eslint': tseslint.plugin,
    },
    rules: {
      '@typescript-eslint/await-thenable': 'off',
      '@typescript-eslint/no-floating-promises': 'off',
      '@typescript-eslint/no-for-in-array': 'off',
      '@typescript-eslint/no-implied-eval': 'off',
      '@typescript-eslint/no-misused-promises': 'off',
      '@typescript-eslint/no-throw-literal': 'off',
      '@typescript-eslint/no-unsafe-argument': 'off',
      '@typescript-eslint/no-unsafe-assignment': 'off',
      '@typescript-eslint/no-unsafe-call': 'off',
      '@typescript-eslint/no-unsafe-member-access': 'off',
      '@typescript-eslint/no-unsafe-return': 'off',
      '@typescript-eslint/prefer-as-const': 'off',
      '@typescript-eslint/prefer-includes': 'off',
      '@typescript-eslint/prefer-nullish-coalescing': 'off',
      '@typescript-eslint/prefer-optional-chain': 'off',
      '@typescript-eslint/prefer-readonly': 'off',
      '@typescript-eslint/prefer-reduce-type-parameter': 'off',
      '@typescript-eslint/prefer-regexp-exec': 'off',
      '@typescript-eslint/prefer-string-starts-ends-with': 'off',
      '@typescript-eslint/require-await': 'off',
      '@typescript-eslint/restrict-plus-operands': 'off',
      '@typescript-eslint/restrict-template-expressions': 'off',
      '@typescript-eslint/unbound-method': 'off',
      '@typescript-eslint/no-require-imports': 'off',
      '@typescript-eslint/no-var-requires': 'off',
      '@typescript-eslint/no-explicit-any': 'off',
      '@typescript-eslint/no-unused-vars': 'off',
      '@typescript-eslint/ban-ts-comment': 'off',
      '@typescript-eslint/no-unused-expressions': 'off',
      '@typescript-eslint/no-array-delete': 'off',
      '@typescript-eslint/no-base-to-string': 'off',
      '@typescript-eslint/no-duplicate-type-constituents': 'off',
      '@typescript-eslint/no-redundant-type-constituents': 'off',
      '@typescript-eslint/no-unnecessary-type-assertion': 'off',
      '@typescript-eslint/no-unsafe-enum-comparison': 'off',
      '@typescript-eslint/only-throw-error': 'off',
      '@typescript-eslint/prefer-promise-reject-errors': 'off',
    },
  },
  // 1. ग्लोबल इग्नोर (Global Ignores)
  {
    ignores: [
      'eslint.config.mjs',
      '**/dist/**',
      '**/build/**',
      '**/node_modules/**',
      '**/*.d.ts',
      '**/*.md',
      '**/coverage/**',
      '**/.next/**',
      '**/.turbo/**',
      '**/.vercel/**',
      '**/.output/**',
      '**/.cache/**',
      '**/.pnpm/**',
      '**/.vscode/**',
      '**/.idea/**',
      '**/.DS_Store',
      '**/.env*',
      '**/CHANGELOG.md',
      '**/LICENSE',
      '**/README.md',
      '**/pnpm-lock.yaml',
      '**/package-lock.json',
      '**/yarn.lock',
      '**/tsconfig*.json',
      '**/jest.config.*',
      '**/playwright.config.*',
      '**/vitest.config.*',
      '**/next.config.*',
      '**/babel.config.*',
      '**/postcss.config.*',
      '**/tailwind.config.*',
      '**/prettier.config.*',
      '**/commitlint.config.*',
      '**/lint-staged.config.*',
      '**/turbo.json',
      '**/cypress.config.*',
      '**/cypress/**',
      '**/playwright/**',
      '**/test-results/**',
      '**/tmp/**',
      '**/temp/**',
      '**/logs/**',
      '**/samples/**',
      '**/docs/**',
      '**/.github/**',
      '**/.husky/**',
      '**/.envrc',
      '**/.dockerignore',
      '**/Dockerfile',
      '**/docker-compose*',
      '**/.eslintrc*',
      '**/.eslintignore',
      '**/.prettierrc*',
      '**/.prettierignore',
      '**/.stylelintrc*',
      '**/.editorconfig',
      '**/.npmrc',
      '**/.nvmrc',
      '**/.node-version',
      '**/.gitignore',
      '**/.gitattributes',
      '**/.gitmodules',
      '**/.gitkeep',
      '**/.keep',
      '**/.envrc',
      '**/.tool-versions',
      '**/.swcrc',
      '**/.browserslistrc',
      '**/.size-limit*',
      // Ignore all test files
      '**/*.test.ts',
      '**/*.spec.ts',
      '**/*.test.tsx',
      '**/*.spec.tsx',
      '**/tests/**',
      '**/__tests__/**',
      '!.env.example',
    ],
  },

  // 8. टेस्ट फ़ाइलें (Test Files) - Rules OFF (MUST BE LAST)
  // (Test override moved to end below)
  // 8. टेस्ट फ़ाइलें (Test Files) - Rules OFF (MUST BE LAST)
  {
    files: [
      'apps/*/tests/**/*',
      'apps/**/tests/**/*',
      'packages/*/tests/**/*',
      'packages/**/tests/**/*',
      'apps/*/__tests__/**/*',
      'apps/**/__tests__/**/*',
      'packages/*/__tests__/**/*',
      'packages/**/__tests__/**/*',
      '**/*.test.ts',
      '**/*.spec.ts',
      '**/*.test.tsx',
      '**/*.spec.tsx',
      '**/tests/**/*.ts',
      '**/tests/**/*.tsx',
      '**/__tests__/**/*.ts',
      '**/__tests__/**/*.tsx',
    ],
    languageOptions: {
      globals: { ...globals.jest, ...globals.node },
      parserOptions: { project: null },
    },
    rules: {
      // **Explicitly OFF** - Should override any previous setting
      '@typescript-eslint/no-unused-vars': 'off',
      '@typescript-eslint/no-explicit-any': 'off',
      '@typescript-eslint/ban-ts-comment': 'off',
      '@typescript-eslint/no-require-imports': 'off',
      '@typescript-eslint/no-var-requires': 'off',
      '@typescript-eslint/no-unused-expressions': 'off',
      'no-empty': 'off',
      'no-control-regex': 'off',
      'no-undef': 'off', // Turn off base JS rules too
    },
  },
]; // End of flat config array
