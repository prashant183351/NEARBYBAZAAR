name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build, Lint, and Test (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm store path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm -w lint || echo "Lint step placeholder; update when lint is configured"

      - name: Build
        run: pnpm -w build

      - name: Run unit tests
        run: pnpm -w test

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      - name: Deploy to Netlify
        if: github.ref == 'refs/heads/main'
        run: |
          npm install -g netlify-cli
          netlify deploy --prod --dir=dist --auth=$NETLIFY_AUTH_TOKEN

  e2e:
    name: Playwright E2E Smoke Tests
    runs-on: ubuntu-latest
    needs: build-and-test
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm -w build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Start dev servers (API + PWAs)
        run: |
          # Start API on 4000
          pnpm --filter @nearbybazaar/api dev --port=4000 &
          # Start Web PWA on 3001 (as expected by Playwright config)
          pnpm --filter @nearbybazaar/web dev --port=3001 &
          # Start Vendor PWA on 3002
          pnpm --filter @nearbybazaar/vendor dev --port=3002 &
          # Start Admin PWA on 3003
          pnpm --filter @nearbybazaar/admin dev --port=3003 &

      - name: Wait for servers
        run: |
          # Give servers a moment to boot before checking
          sleep 5
          node scripts/check-servers.js

      - name: Run E2E tests (Chromium)
        run: pnpm test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/
          if-no-files-found: ignore
          retention-days: 7
